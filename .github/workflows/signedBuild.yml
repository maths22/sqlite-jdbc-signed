name: Signed Build

on:
  workflow_dispatch:
    inputs:
      upstreamTag:
        description: 'Upstream Tag'
        type: string
        default: 'default'
        required: true

jobs:
  build:
    runs-on: macos-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3
    - uses: robinraju/release-downloader@v1.7
      with: 
        repository: xerial/sqlite-jdbc
        tag: "${{ github.events.inputs.upstreamTag }}"
        fileName: "*.jar"
        tarBall: false
        zipBall: false
    - name: Install the Apple certificate
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

    - name: Sign macOS native libs
      run: |
        export SQLITE_JAR=$(find . -name "org.xerial.sqlite-jdbc-*.jar")
        unzip $SQLITE_JAR -d extracted
        cd extracted
        find . -type f -name "*.jnilib" | xargs codesign -s "$DEVELOPER_ID" -v -f
        # https://docs.oracle.com/javase/tutorial/deployment/jar/update.html
        find . -type f -name "*.jnilib" | xargs jar -ufv "../$SQLITE_JAR"
        cd ..
        rm -rf extracted
        mv $SQLITE_JAR sqlite.jar


    - uses: actions/setup-java@v3
      with:
        distribution: coretto
        java-version: 17
    
    - name: Setup and execute Gradle 'publish' task
      uses: gradle/gradle-build-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        arguments: publish

    - name: Clean up keychain
      if: ${{ always() }}
      run: |
        security delete-keychain $RUNNER_TEMP/app-signing.keychain-db